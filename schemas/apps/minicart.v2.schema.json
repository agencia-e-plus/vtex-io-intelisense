{
	"type": "object",
	"additionalProperties": false,
	"title": "Minicart",
	"markdownDescription": "https://developers.vtex.com/vtex-developer-docs/docs/vtex-minicart\n\nThe VTEX Minicart is a block that displays a summary list of all items added by customers in their shopping cart. Its data is fetched from the Checkout OrderForm API.\n\n![Warning](https://developers.vtex.com/img/emojis/warning.png|width=12px) The Minicart v2 will only effectively function if the store uses the Add To Cart Button instead of the Buy Button in blocks such as the Shelf and the Product Details Page.\n\n`\"vtex.minicart@2.x\"`",
	"properties": {
		"children": { "$ref": "./../shared/children.schema.json" },
		"props": {
			"type": "object",
			"additionalProperties": false,
			"markdownDescription": "All available properties for this block.",
			"properties": {
				"variation": {
					"type": "string",
					"markdownDescription": "enum\n\nMinicart behavior when rendered. Possible values are: popup (it pops up on the Homepage in a minitab window) , drawer (it is rendered through a side bar) or link (when clicked on, it redirects the user to the Checkout page).",
					"default": "drawer",
					"oneOf": [
						{
							"const": "drawer",
							"markdownDescription": "it pops up on the Homepage in a minitab window"
						},
						{
							"const": "popup",
							"markdownDescription": "it is rendered through a side bar"
						},
						{
							"const": "link",
							"markdownDescription": "when clicked on, it redirects the user to the Checkout page"
						}
					]
				},
				"drawerSlideDirection": {
					"type": "string",
					"markdownDescription": "enum\n\nSlide direction for the drawer Minicart opening. Possible values are: rightToLeft or leftToRight).",
					"default": "rightToLeft",
					"oneOf": [{ "const": "rightToLeft" }, { "const": "leftToRight" }]
				},
				"linkVariationUrl": {
					"type": "string",
					"markdownDescription": "string\n\nLink associated to the link Minicart.",
					"default": ""
				},
				"maxDrawerWidth": {
					"type": "number",
					"markdownDescription": "number\n\nMaximum width (in pixels) for the drawer Minicart when opened.",
					"default": 440
				},
				"openOnHover": {
					"type": "boolean",
					"markdownDescription": "boolean\n\nWhether the popup minicart should open when the user hovers over it.",
					"default": false
				},
				"quantityDisplay": {
					"type": "string",
					"markdownDescription": "enum\n\nShows the quantity badge even when the amount of products in the cart is zero. Possible values are: always or not-empty or never.",
					"default": "not-empty",
					"oneOf": [
						{ "const": "always" },
						{ "const": "not-empty" },
						{ "const": "never" }
					]
				},
				"itemCountMode": {
					"type": "string",
					"markdownDescription": "enum\n\nQuantity badge behavior when displaying the number of total items added in Minicart. Possible values are: total, distinct, totalAvailable and distinctAvailable.",
					"default": "distinct",
					"oneOf": [
						{
							"type": "string",
							"const": "total",
							"markdownDescription": "Quantity badge displays the number of items added to the cart"
						},
						{
							"type": "string",
							"const": "distinct",
							"markdownDescription": "Only displays the number of different products added to the cart"
						},
						{
							"type": "string",
							"const": "totalAvailable",
							"markdownDescription": "Displays the number of available items added to the cart"
						},
						{
							"type": "string",
							"const": "distinctAvailable",
							"markdownDescription": "Displays the number of different and available products added to the cart"
						}
					]
				},
				"backdropMode": {
					"type": "string",
					"markdownDescription": "enum\n\nControls whether the backdrop should be displayed when the drawer Minicart is opened or not. Possible values are: visible (rendering the backdrop) or none (rendering the drawer without backdrop).",
					"default": "none",
					"oneOf": [
						{
							"const": "visible",
							"description": "rendering the backdrop"
						},
						{
							"const": "none",
							"description": "rendering the drawer without backdrop"
						}
					]
				},
				"MinicartIcon": {
					"type": "string",
					"markdownDescription": "block\n\nIcon displayed in the Minicart button. This prop's value must match the name of the block responsible for rendering the desired icon.",
					"default": "icon-cart"
				},
				"customPixelEventId": {
					"type": "string",
					"markdownDescription": "string\n\nStore event ID responsible for triggering the minicart.v2 to automatically open itself on the interface.",
					"default": ""
				},
				"customPixelEventName": {
					"type": "string",
					"markdownDescription": "string\n\nStore event name responsible for triggering the minicart.v2 to automatically open itself on the interface. Some examples are: 'addToCart' and 'removeFromCart'. Notice that using this prop will make the minicart.v2 open in every event with the specified name if no customPixelEventId is specified.",
					"default": ""
				}
			}
		}
	}
}
