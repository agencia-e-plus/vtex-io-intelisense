{
	"type": "object",
	"additionalProperties": false,
	"title": "Condition Layout (Binding)",
	"markdownDescription": "https://developers.vtex.com/vtex-developer-docs/docs/vtex-condition-layout\n\nDefines the condition logic on the current binding and the children blocks that are going to be rendered in case the predefined conditions are met.\n\n`\"vtex.condition-layout@2.x\"`",
	"properties": {
		"title": { "$ref": "../shared/title.schema.json" },
		"props": {
			"type": "object",
			"additionalProperties": false,
			"markdownDescription": "All available properties for this block.",
			"properties": {
				"conditions": {
					"type": "array",
					"markdownDescription": "array\n\nList of desired conditions.",
					"items": [
						{
							"type": "object",
							"properties": {
								"subject": {
									"type": "string",
									"properties": {
										"id": {
											"type": "string"
										}
									},
									"markdownDescription": "string\n\nDefines, according to the product context where the block in declared in, which data is needed from the UI to validate the value chosen in the object prop. Check below the possible values for this prop.\n\n**Subject** | **Arguments**\n\nbindingId | `{ id: string }`",
									"oneOf": [{ "const": "bindingId" }]
								},
								"arguments": {
									"type": "object",
									"markdownDescription": "object\n\nDefines, according to the product context where the block in declared in, which data is needed from the UI to validate the value chosen in the object prop. Check below the possible values for this prop.\n\n**Subject** | **Arguments**\n\nbindingId | `{ id: string }`"
								},
								"toBe": {
									"type": "boolean",
									"markdownDescription": "boolean\n\nWhether the data fetched in the subject prop must met the predefined conditions to render the new layout (true) or not (false).",
									"default": false
								}
							}
						}
					]
				},
				"matchType": {
					"type": "string",
					"markdownDescription": "enum\n\nLayout rendering criteria. Possible values are: all (all conditions must be matched in order to render the layout), any (at least one of the conditions must be matched in order to render the layout) or none (no conditions must be matched in order to render the layout).",
					"default": ["all"],
					"oneOf": [
						{
							"const": "all",
							"markdownDescription": "all conditions must be matched in order to render the layout"
						},
						{
							"const": "none",
							"markdownDescription": "at least one of the conditions must be matched in order to render the layout"
						},
						{
							"const": "any",
							"markdownDescription": "no conditions must be matched in order to render the layout"
						}
					]
				},
				"Then": {
					"type": "string",
					"markdownDescription": "block\n\nName of the block to be rendered if the conditions are met. If no value is defined, the blocks declared as children of condition-layout.product will be rendered instead."
				},
				"Else": {
					"type": "string",
					"markdownDescription": "block\n\nName of the block to be rendered if the conditions are not met.",
					"default": "button"
				}
			}
		}
	}
}
