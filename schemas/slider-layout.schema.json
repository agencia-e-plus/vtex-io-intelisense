{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"title": "Slider Layout",
	"description": "Slider Layout",
	"type": "object",
	"properties": {
		"title": {
			"type": "string"
		},
		"children": {
			"type": "array",
			"items": { "$ref": "./shared/block.schema.json" }
		},
		"props": {
			"type": "object",
			"description": "Block's properties",
			"properties": {
				"label": {
					"type": "string",
					"description": "aria-label attribute value to be used by the ",
					"default": "slider"
				},
				"showNavigationArrows": {
					"type": "string",
					"enum": ["mobileOnly", "desktopOnly", "always", "never"],
					"description": "When navigation arrows should be rendered. Possible values are: mobileOnly, desktopOnly, always, or never.",
					"default": "always"
				},
				"showPaginationDots": {
					"type": "string",
					"enum": ["mobileOnly", "desktopOnly", "always", "never"],
					"description": "When pagination dots should be rendered. Possible values are: mobileOnly, desktopOnly, always, or never.",
					"default": "always"
				},
				"infinite": {
					"type": "boolean",
					"description": "Whether the slider should be infinite (true) or not (false). When this prop is set as false, the slider will have an explicit end for users.",
					"default": false
				},
				"usePagination": {
					"type": "boolean",
					"description": "Whether the slider should use slide pages (true) or not (false). When this prop is set as false, the slider will use smooth scrolling for slide navigation instead of arrows.",
					"default": true
				},
				"itemsPerPage": {
					"anyOf": [
						{ "$ref": "./shared/responsive-values.schema.json" },
						{ "type": "number" }
					],
					"description": "Number of slider items to be shown on each type of device. For more on this, check out the  itemsPerPage object section below.",
					"default": { "desktop": 5, "tablet": 3, "phone": 1 }
				},
				"navigationStep": {
					"anyOf": [
						{ "type": "number" },
						{ "type": "string", "enum": ["page"] }
					],
					"description": "Number of slider items that should be displayed at a time when users click on one of the slider's arrows. It is also possible to set this prop value as page, meaning that the number of slider items to be displayed when one of the arrows is clicked on is equal to the number of slider items set per page (in the itemsPerPage prop).",
					"default": "page"
				},
				"slideTransition": {
					"type": "object",
					"properties": {
						"speed": {
							"type": "number"
						},
						"delay": {
							"type": "number"
						},
						"timing": {
							"type": "number"
						}
					},
					"description": "Controls the transition animation between slides based on ",
					"default": { "speed": 400, "delay": 0, "timing": "" }
				},
				"autoplay": {
					"type": "object",
					"properties": {
						"timeout": {
							"type": "number",
							"description": "Timeout (in ms) between each slide.",
							"default": ""
						},
						"stopOnHover": {
							"type": "boolean",
							"description": "Whether the auto play should stop when users are hovering the slider (true) or not (false).",
							"default": ""
						}
					},
					"description": "Controls the autoplay feature behavior. For more on this, check out the autoplay object section below.",
					"default": "undefined"
				},
				"fullWidth": {
					"type": "boolean",
					"description": "Whether the slides should occupy the full page width, making the arrows appear on top of them (true) or not (false).",
					"default": true
				},
				"arrowSize": {
					"anyOf": [
						{ "$ref": "./shared/responsive-values.schema.json" },
						{ "type": "number" }
					],
					"description": "Slider arrows size (height and width) in pixels. This is a responsive prop, which means you can pass to it an object with different values for each breakpoint (desktop, mobile, tablet, and phone).",
					"default": 25
				},
				"centerMode": {
					"anyOf": [
						{ "$ref": "./shared/responsive-values.schema.json" },
						{
							"type": "string",
							"oneOf": [
								{
									"const": "to-the-left",
									"description": "elements are centered, allowing users to see a peek of the previous and next slides"
								},
								{
									"const": "center",
									"description": "align elements to the left side, allowing users to see a peek of the next slide, but not the previous one"
								},
								{
									"const": "disabled",
									"description": "disables the feature, rendering elements on the whole screen without taking a peek in the previous and next slides"
								}
							]
						}
					],
					"markdownDescription": "Defines the slider elements positioning on the screen. Possible values are: `center` (elements are centered, allowing users to see a peek of the previous and next slides), `to-the-left` (align elements to the left side, allowing users to see a peek of the next slide, but not the previous one), and `disabled` (disables the feature, rendering elements on the whole screen without taking a peek in the previous and next slides). Notice: This is a responsive prop, which means you can pass to it an object with different values for each breakpoint (desktop, mobile, tablet, and phone).",
					"default": "disabled"
				},
				"centerModeSlidesGap": {
					"type": "number",
					"markdownDescription": "Number of pixels between slides when `centerMode` is set to `center` or `to-the-left`."
				},
				"blockClass": {
					"anyOf": [
						{ "type": "string" },
						{ "type": "array", "items": { "type": "string" } }
					]
				}
			}
		}
	}
}
