{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"title": "block title",
	"description": "",
	"type": "object",
	"properties": {
		"props": {
			"type": "object",
			"description": "Block's properties",
			"properties": {
				"scroll": {
					"type": "string",
					"oneOf": [
						{
							"const": "body",
							"description": "users can scroll the whole modal by normally scrolling the page"
						},
						{
							"const": "content",
							"description": "users can scroll the modal *content* when hovering it"
						}
					],
					"description": "Defines how the modal should be scrolled by users. Possible values are: body (users can scroll the whole modal by normally scrolling the page) and content (users can scroll the modal *content* when hovering it).",
					"default": "content"
				},
				"blockClass": { "$ref": "../shared/blockClass.schema.json" },
				"disableEscapeKeyDown": {
					"type": "boolean",
					"description": "Whether the modal should be closed when pressing the Esc key (true) or not (false).",
					"default": false
				},
				"fullScreen": {
					"type": "boolean",
					"description": "Whether the modal should fill the whole screen (true) or not (false). This prop is responsive i.e. it adapts itself to the device's breakpoints.",
					"default": false
				},
				"backdrop": {
					"type": "string",
					"enum": ["clickable", "none"],
					"description": "Whether the modal will have a clickable backdrop (clickable) or no backdrop at all (none). This prop is responsive i.e. it adapts itself to the device's breakpoints.",
					"default": "clickable"
				},
				"customPixelEventId": {
					"type": "string",
					"description": "Store event ID responsible for triggering the modal-layout block (hence triggering the closing of modal-layout blocks on the interface as well).",
					"default": "undefined"
				},
				"customPixelEventName": {
					"type": "string",
					"description": "Store event name responsible for triggering the modal-layout block (hence triggering the closing of modal-layout blocks on the interface as well). Some examples are: 'addToCart' and 'removeFromCart' events. Notice that using this prop will make the associated modal-layout close in ",
					"default": "undefined"
				}
			}
		}
	}
}
